Elm.Repl = Elm.Repl || {};
Elm.Repl.make = function (_elm) {
   "use strict";
   _elm.Repl = _elm.Repl || {};
   if (_elm.Repl.values)
   return _elm.Repl.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Repl",
   $Basics = Elm.Basics.make(_elm),
   $Dict = Elm.Dict.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Model = Elm.Model.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var tsol = {ctor: "_Tuple0"};
   var board = $Model.makeInitialBoard;
   var deltron3030 = A2($List.map,
   function (key) {
      return A2($Dict.get,
      key,
      board);
   },
   _L.fromArray(["A1"
                ,"B1"
                ,"C1"
                ,"D1"
                ,"E1"
                ,"F1"
                ,"G1"
                ,"H1"]));
   _elm.Repl.values = {_op: _op
                      ,board: board
                      ,deltron3030: deltron3030
                      ,tsol: tsol};
   return _elm.Repl.values;
};