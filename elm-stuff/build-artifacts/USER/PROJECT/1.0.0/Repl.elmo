Elm.Repl = Elm.Repl || {};
Elm.Repl.make = function (_elm) {
   "use strict";
   _elm.Repl = _elm.Repl || {};
   if (_elm.Repl.values)
   return _elm.Repl.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Repl",
   $Basics = Elm.Basics.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var tsol = {ctor: "_Tuple0"};
   var square = F2(function (c,p) {
      return {_: {}
             ,color: c
             ,piece: p};
   });
   var l = _L.fromArray(["A7"
                        ,"B7"
                        ,"C7"
                        ,"D7"
                        ,"E7"
                        ,"F7"
                        ,"G7"
                        ,"H7"]);
   var White = {ctor: "White"};
   var Black = {ctor: "Black"};
   var deltron3030 = A2($List.map2,
   square,
   $List.concat(A2($List.repeat,
   4,
   _L.fromArray([Black
                ,White]))))(A2($List.repeat,
   8,
   $Maybe.Nothing));
   _elm.Repl.values = {_op: _op
                      ,Black: Black
                      ,White: White
                      ,deltron3030: deltron3030
                      ,l: l
                      ,square: square
                      ,tsol: tsol};
   return _elm.Repl.values;
};